# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '8d7433f5-d96e-4469-807a-ffc6b38dc164'
    definition: '8'
    buildVersionToDownload: 'latest'
    itemPattern: '**.app-debug.apk'
    targetPath: '$(Pipeline.Workspace)'

- script: |
    npm install -g appcenter-cli
    appcenter login --token feebdff44f99eecaa582e06442080b2621793f1d
    appcenter test run appium --app "com.planonsoftware.universe" --devices 36608302 --app-path "$(Pipeline.Workspace)/debug-app.apk"  --test-series "master" --locale "en_US" --build-dir "$(Agent.BuildDirectory)"
  displayName: 'Login into app-center and run tests'

# - task: AppCenterTest@1
#   inputs:
#     artifactsDirectory: '$(Pipeline.Workspace)/debug-app.apk'
#     frameworkOption: 'appium'
#     appiumBuildDirectory: '$(Agent.HomeDirectory)'
#     credentialsOption: 'serviceEndpoint'
#     localeOption: 'en_US'