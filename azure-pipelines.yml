# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: DownloadSecureFile@1
  name: P12Certificate
  displayName: 'Download P12 Secure Certificate'
  inputs:
    secureFile: 'Certificates.p12'


- task: DownloadSecureFile@1
  name: ProvisionCertificate
  displayName: 'Download Mobile Provision Certificate'
  inputs:
    secureFile: 'xcode10.mobileprovision'

- script: |
    ls
  displayName: 'Folder Structure'

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

# - task: DownloadPipelineArtifact@2
#   inputs:
#     buildType: 'specific'
#     project: '8d7433f5-d96e-4469-807a-ffc6b38dc164'
#     definition: '8'
#     buildVersionToDownload: 'latest'
#     artifactName: 'apps'
#     itemPattern: '**/*app-debug.apk'
#     targetPath: '$(Build.SourcesDirectory)/bin'
#   displayName: 'Downloading Android APK file for testing'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '8d7433f5-d96e-4469-807a-ffc6b38dc164'
    definition: '8'
    buildVersionToDownload: 'latest'
    artifactName: 'apps'
    itemPattern: '**/*HelloWorld.ipa'
    targetPath: '$(Build.SourcesDirectory)/bin'
  displayName: 'Downloading IOS IPA file for testing'

- task: IpaResign@1
  inputs:
    ipaPath: '$(Build.SourcesDirectory)/bin/s/HelloWorld.ipa'
    signFileP12Path: 'Certificates.p12'
    signFileP12Password: 'secret'
    provFileProfilePath: 'xcode10.mobileprovision'
    installFastlane: false

- script: |
    npm install -g appcenter-cli
    appcenter login --token feebdff44f99eecaa582e06442080b2621793f1d
  displayName: 'Login into app-center'

- script: |
    mvn -DskipTests -P prepare-for-upload package
  displayName: 'Prepare tests for upoload'

# appcenter test run appium --app "chiranjeevi521/CordovaAppCITest" --devices "chiranjeevi521/AndroidTestDevices" --app-path $(Build.SourcesDirectory)/bin/s/platforms/android/app/build/outputs/apk/debug/app-debug.apk --test-series "master" --locale "en_US" --build-dir $(Build.SourcesDirectory)/target/upload

# - task: AppCenterTest@1
#   inputs:
#     appFile: '$(Build.SourcesDirectory)/bin/s/platforms/android/app/build/outputs/apk/debug/app-debug.apk'
#     artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'
#     frameworkOption: 'appium'
#     appiumBuildDirectory: '$(Build.SourcesDirectory)/target/upload'
#     credentialsOption: 'serviceEndpoint'
#     serverEndpoint: 'AppCenterServiceConnection'
#     appSlug: 'chiranjeevi521/CordovaAppCITest'
#     devices: 'chiranjeevi521/AndroidTestDevices'
#     localeOption: 'en_US'
#   displayName: 'Executing Android Hardware Specific Tests'


- task: AppCenterTest@1
  inputs:
    appFile: '$(Build.SourcesDirectory)/bin/s/HelloWorld.ipa'
    artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'
    frameworkOption: 'appium'
    appiumBuildDirectory: '$(Build.SourcesDirectory)/target/upload'
    credentialsOption: 'serviceEndpoint'
    serverEndpoint: 'AppCenterServiceConnection'
    appSlug: 'chiranjeevi521/CordovaIOSAppCITest'
    devices: 'chiranjeevi521/IOSTestDevices'
    localeOption: 'en_US'
  displayName: 'Executing IOS Hardware Specific Tests'




- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '*.png'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
  displayName: 'Copying images as artifacts'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'images'
    artifactType: 'container'